@page "/form"
@rendermode InteractiveServer
@implements IDisposable
@inject IJSRuntime JSRuntime

<PageTitle>Form</PageTitle>

<h1>SurveyJS Form</h1>
<div id="surveyContainer"></div>

@code {
    private DotNetObjectReference<Form>? dotNetRef;

    private string surveyJson = @"{
        ""elements"": [
            { ""name"": ""FirstName"", ""title"": ""Enter your first name:"", ""type"": ""text"" },
            { ""name"": ""LastName"", ""title"": ""Enter your last name:"", ""type"": ""text"" }
        ]
    }";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            dotNetRef = DotNetObjectReference.Create(this);
            await JSRuntime.InvokeVoidAsync("initializeSurvey", surveyJson, dotNetRef);
        }
    }

    [JSInvokable]
    public async Task OnSurveyComplete(string results)
    {
        await JSRuntime.InvokeVoidAsync("alert", "Thank you for your feedback!");
    }

    public void Dispose()
    {
        dotNetRef?.Dispose();
    }
}
